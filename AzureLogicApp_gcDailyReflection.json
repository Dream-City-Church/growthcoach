{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "ChatGPT_Response": {
                "inputs": {
                    "content": "@body('Get_ChatGPT_Response')",
                    "schema": {
                        "properties": {
                            "choices": {
                                "items": {
                                    "properties": {
                                        "finish_reason": {},
                                        "index": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "properties": {
                                                "content": {
                                                    "type": "string"
                                                },
                                                "role": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "index",
                                        "message"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "created": {
                                "type": "integer"
                            },
                            "id": {
                                "type": "string"
                            },
                            "model": {
                                "type": "string"
                            },
                            "object": {
                                "type": "string"
                            },
                            "usage": {
                                "properties": {
                                    "completion_tokens": {
                                        "type": "integer"
                                    },
                                    "prompt_tokens": {
                                        "type": "integer"
                                    },
                                    "total_tokens": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "Get_ChatGPT_Response": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "Chat_System_Prompt": {
                "inputs": [
                    {
                        "content": "You are Growth Coach, a Christian mentorship expert with 20 years of experience guiding people into closer relationship with God and Jesus Christ. You are a life coach for the user and communicate over chat messages. Using the information from their profile below, help the user develop spiritual goals, build better habits, and grow in their faith.\n\nUsing the profile information below, recommend a passage from the bible for a \"Daily Reflection\" for @{triggerBody()?['gcUser']?['first_name']} and call the daily_reflection function.\n\nProfile:\n- The user's name is @{triggerBody()?['gcUser']?['first_name']}. They are a @{triggerBody()?['gcUser']?['age']} year old @{triggerBody()?['gcUser']?['gender']}.\n- They are @{triggerBody()?['gcUser']?['marital']} and have @{triggerBody()?['gcUser']?['children']}.\n- They've been a Christian for @{triggerBody()?['gcUser']?['time_as_christian']}.\n- They attend church @{triggerBody()?['gcUser']?['church_attendance']}.\n- They read their Bible @{triggerBody()?['gcUser']?['bible']}.\n- They pray @{triggerBody()?['gcUser']?['prayer']}.\n- Attends small group: @{triggerBody()?['gcUser']?['small_group']}.\n- Volunteers: @{triggerBody()?['gcUser']?['volunteer']}.\n- Gives financially: @{triggerBody()?['gcUser']?['give']}.\n\nCurrent Goals:\n@{triggerBody()?['gcGoals']}",
                        "role": "system"
                    }
                ],
                "runAfter": {
                    "Functions_Prompt": [
                        "Succeeded"
                    ]
                },
                "type": "Compose"
            },
            "Functions_Prompt": {
                "inputs": [
                    {
                        "description": "Create a recommended reading for the user. Includes a bible passage, a question on the passage, and a reflection on how we may apply it to our lives.",
                        "name": "daily_reflection",
                        "parameters": {
                            "properties": {
                                "bible_passage": {
                                    "description": "Book, chapter and verses of the passage",
                                    "type": "string"
                                },
                                "passage_question": {
                                    "description": "A question regarding the content of the passage.",
                                    "type": "string"
                                },
                                "passage_summary": {
                                    "description": "A one-sentence summary of the passage.",
                                    "type": "string"
                                },
                                "reflection": {
                                    "description": "A challenge for the user to apply what was read into their own life.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "runAfter": {
                    "goalsArray": [
                        "Succeeded"
                    ]
                },
                "type": "Compose"
            },
            "GPT-Response": {
                "inputs": {
                    "variables": [
                        {
                            "name": "GPT-Response",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "OpenAI_GPT4_Key": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Get_ChatGPT_Response": {
                "inputs": {
                    "body": {
                        "frequency_penalty": 0,
                        "function_call": {
                            "name": "daily_reflection"
                        },
                        "functions": "@outputs('Functions_Prompt')",
                        "max_tokens": 500,
                        "messages": "@outputs('Chat_System_Prompt')",
                        "presence_penalty": 0,
                        "stop": null,
                        "temperature": 0.75,
                        "top_p": 0.95
                    },
                    "headers": {
                        "Content-Type": "application/json",
                        "api-key": "@body('OpenAI_GPT4_Key')?['value']"
                    },
                    "method": "POST",
                    "uri": "https://dccgpt4.openai.azure.com/openai/deployments/dcc-gpt4/chat/completions?api-version=2023-08-01-preview"
                },
                "runAfter": {
                    "Chat_System_Prompt": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "OpenAI_GPT4_Key": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/secrets/@{encodeURIComponent('OpenAI-GPT4')}/value"
                },
                "runAfter": {},
                "type": "ApiConnection"
            },
            "Parse_Daily_Reflection": {
                "inputs": {
                    "content": "@body('ChatGPT_Response')?['choices'][0]['message']['function_call']['arguments']",
                    "schema": {
                        "properties": {
                            "bible_passage": {
                                "type": "string"
                            },
                            "passage_question": {
                                "type": "string"
                            },
                            "passage_summary": {
                                "type": "string"
                            },
                            "reflection": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "ChatGPT_Response": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "Response_2": {
                "inputs": {
                    "body": {
                        "bible_passage": "@body('Parse_Daily_Reflection')?['bible_passage']",
                        "passage_question": "@body('Parse_Daily_Reflection')?['passage_question']",
                        "passage_summary": "@body('Parse_Daily_Reflection')?['passage_summary']",
                        "reflection": "@body('Parse_Daily_Reflection')?['reflection']",
                        "status": "ok"
                    },
                    "statusCode": 200
                },
                "kind": "Http",
                "runAfter": {
                    "Parse_Daily_Reflection": [
                        "Succeeded"
                    ]
                },
                "type": "Response"
            },
            "goalsArray": {
                "inputs": {
                    "variables": [
                        {
                            "name": "goalsArray",
                            "type": "array"
                        }
                    ]
                },
                "runAfter": {
                    "GPT-Response": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "manual": {
                "inputs": {
                    "method": "POST",
                    "schema": {
                        "properties": {
                            "chatHistory": {
                                "items": {
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        },
                                        "role": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "content",
                                        "role"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "chatType": {
                                "type": "string"
                            },
                            "gcGoals": {
                                "items": {
                                    "properties": {
                                        "goal_check_in_days": {
                                            "type": "string"
                                        },
                                        "goal_description": {
                                            "type": "string"
                                        },
                                        "goal_id": {
                                            "type": "string"
                                        },
                                        "goal_status": {
                                            "type": "string"
                                        },
                                        "goal_title": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": [
                                    "array",
                                    "null"
                                ]
                            },
                            "gcUser": {
                                "properties": {
                                    "": {
                                        "type": "string"
                                    },
                                    "age": {
                                        "type": "string"
                                    },
                                    "bible": {
                                        "type": "string"
                                    },
                                    "children": {
                                        "type": "string"
                                    },
                                    "church_attendance": {
                                        "type": "string"
                                    },
                                    "email_address": {
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "string"
                                    },
                                    "give": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "marital": {
                                        "type": "string"
                                    },
                                    "phone_number": {
                                        "type": "string"
                                    },
                                    "prayer": {
                                        "type": "string"
                                    },
                                    "small_group": {
                                        "type": "string"
                                    },
                                    "time_as_christian": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "kind": "Http",
                "type": "Request"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "keyvault": {
                    "connectionId": "/subscriptions/18060ae6-2a4a-4fb3-89ad-c6a7f2afbad7/resourceGroups/MP_Logic_Apps/providers/Microsoft.Web/connections/keyvault-1",
                    "connectionName": "keyvault-1",
                    "connectionProperties": {
                        "authentication": {
                            "type": "ManagedServiceIdentity"
                        }
                    },
                    "id": "/subscriptions/18060ae6-2a4a-4fb3-89ad-c6a7f2afbad7/providers/Microsoft.Web/locations/southcentralus/managedApis/keyvault"
                }
            }
        }
    }
}